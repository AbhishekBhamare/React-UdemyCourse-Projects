{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\food_order_app\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.item[existingCartItemIndex];\n    const updatedItems = state.items.concat(action.item);\n    const updatedAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItems: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/React/food_order_app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","concat","updatedAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItems","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAE;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,WAAW,EAAE;AAFO,CAAxB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EAAtD,CAA9B;AACA,UAAMC,gBAAgB,GAAGP,KAAK,CAACK,IAAN,CAAWF,qBAAX,CAAzB;AACA,UAAMK,YAAY,GAAGR,KAAK,CAACH,KAAN,CAAYY,MAAZ,CAAmBR,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMK,aAAa,GAAGV,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYM,KAAZ,GAAoBV,MAAM,CAACI,IAAP,CAAYO,MAA1E;AAEA,WAAO;AACHf,MAAAA,KAAK,EAAEW,YADJ;AAEHV,MAAAA,WAAW,EAAEY;AAFV,KAAP;AAIH;;AACD,SAAOd,gBAAP;AACH,CAbD;;AAeA,MAAMiB,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCtB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMqB,oBAAoB,GAAGZ,IAAI,IAAI;AACjCW,IAAAA,kBAAkB,CAAC;AAACd,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMa,yBAAyB,GAAGZ,EAAE,IAAI;AACpCU,IAAAA,kBAAkB,CAAC;AAACd,MAAAA,IAAI,EAAE,QAAP;AAAiBI,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMa,WAAW,GAAG;AAEhBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KAFD;AAGhBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAHP;AAIhBsB,IAAAA,QAAQ,EAACH,oBAJO;AAKhBI,IAAAA,UAAU,EAACH;AALK,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CApBD;;GAAMT,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState= {\r\n    items: [],\r\n    totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD'){\r\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\r\n        const existingCartItem = state.item[existingCartItemIndex];\r\n        const updatedItems = state.items.concat(action.item);\r\n        const updatedAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        \r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedAmount,\r\n        }\r\n    }\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = item => {\r\n        dispatchCartAction({type: 'ADD', item: item});\r\n    };\r\n    const removeItemFromCartHandler = id => {\r\n        dispatchCartAction({type: 'REMOVE', id: id});\r\n    };\r\n\r\n    const cartContext = {\r\n\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItems:addItemToCartHandler,\r\n        removeItem:removeItemFromCartHandler,\r\n    }\r\n    return <CartContext.Provider value={cartContext}>   \r\n        {props.children}\r\n    </CartContext.Provider>\r\n}\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}